200
[[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], [120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], [140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159], [160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], [180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199]]
Creating original model: vit_base_patch16_224
[Sequential(
  (0): Linear(in_features=768, out_features=1536, bias=True)
  (1): GELU(approximate='none')
  (2): Dropout(p=0.0, inplace=False)
), Sequential(
  (0): Linear(in_features=1536, out_features=768, bias=True)
  (1): Dropout(p=0.0, inplace=False)
)]
Creating model: vit_base_patch16_224
Namespace(aa=None, angle_epsilon=0.18, batch_size=24, batchwise_prompt=False, ca_lr=0.005, ca_storage_efficient_method='multi-centroid', clip_grad=1.0, color_jitter=None, config='cub_hideprompt_5e', cooldown_epochs=10, crct_epochs=30, data_path='./datasets/', dataset='Split-CUB200', dataset_name='cub', decay_epochs=30, decay_rate=0.1, device='cuda', dist_url='env://', distributed=False, drop=0.0, drop_path=0.0, e_prompt_layer_idx=[0, 1, 2, 3, 4], embedding_key='cls', epochs=50, eval=False, freeze=['blocks', 'patch_embed', 'cls_token', 'norm', 'pos_embed'], g_prompt_layer_idx=[], g_prompt_length=5, global_pool='token', head_type='token', initializer='uniform', input_size=224, larger_prompt_lr=False, length=20, lr=0.03, lr_noise=None, lr_noise_pct=0.67, lr_noise_std=1.0, mask_first_epoch=False, milestones=[10], min_lr=1e-05, model='vit_base_patch16_224', model_num=0, momentum=0.9, n_centroids=10, nb_classes=200, no_auto=0, not_train_ca=False, num_tasks=10, num_workers=4, opt='adam', opt_betas=(0.9, 0.999), opt_eps=1e-08, original_model='vit_base_patch16_224', original_model_mlp_structure=[2], output_dir='./typical_setting_reproduced_cub_no_large_lr/cub_B_0_INC_20/hideprompt/pgc_10/cub_hideprompt_5e/test_55385', patience_epochs=10, pin_mem=True, predefined_key='', pretrained=True, print_freq=10, prompt_key=False, prompt_key_init='uniform', prompt_momentum=0.01, prompt_pool=True, pull_constraint=True, pull_constraint_coeff=1.0, recount=1, reg=0.01, reinit_optimizer=True, remode='pixel', reprob=0.0, same_key_value=False, sched='step', seed=42, shared_prompt_key=False, shared_prompt_pool=True, shuffle=False, size=10, smoothing=0.1, subparser_name='cub_hideprompt_5e', task_inc=False, threshold=0.5, threshold2=1.0, threshold_pretrained=0.5, top_k=1, topk_old_subspace=3, train_inference_task_only=False, train_interpolation='bicubic', train_mask=True, trained_original_model='./ckpt_for_hidep/cub/cub_b_0_inc_20/cub_hideprompt_5e/test_88110', unscale_lr=True, use_e_prompt=True, use_g_prompt=False, use_old_subspace_forward=1, use_pre_gradient_constraint=1, use_prefix_tune_for_e_prompt=True, use_prefix_tune_for_g_prompt=False, use_prompt_mask=True, warmup_epochs=0, warmup_lr=1e-06, weight_decay=0.0, world_size=1)
number of params: 1689800
Start training for 50 epochs
args.config:  cub_hideprompt_5e
>>> pretrained data exists
dict_keys([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])
layer 0 item key r 0
----------------------------------------
Gradient Constraints Summary (768, 0)
----------------------------------------
layer 1 item key r 0
----------------------------------------
Gradient Constraints Summary (768, 0)
----------------------------------------
layer 2 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
layer 3 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
layer 4 item key r 2
----------------------------------------
Gradient Constraints Summary (768, 2)
----------------------------------------
layer 5 item key r 3
----------------------------------------
Gradient Constraints Summary (768, 3)
----------------------------------------
layer 6 item key r 3
----------------------------------------
Gradient Constraints Summary (768, 3)
----------------------------------------
layer 7 item key r 3
----------------------------------------
Gradient Constraints Summary (768, 3)
----------------------------------------
layer 8 item key r 3
----------------------------------------
Gradient Constraints Summary (768, 3)
----------------------------------------
layer 9 item key r 3
----------------------------------------
Gradient Constraints Summary (768, 3)
----------------------------------------
layer 10 item key r 3
----------------------------------------
Gradient Constraints Summary (768, 3)
----------------------------------------
layer 11 item key r 3
----------------------------------------
Gradient Constraints Summary (768, 3)
----------------------------------------
dict_keys([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])
e 0 key torch.Size([768, 768])
item key
e 1 key torch.Size([768, 768])
item key
e 2 key torch.Size([768, 768])
item key
e 3 key torch.Size([768, 768])
item key
e 4 key torch.Size([768, 768])
item key
e 5 key torch.Size([768, 768])
item key
e 6 key torch.Size([768, 768])
item key
e 7 key torch.Size([768, 768])
item key
e 8 key torch.Size([768, 768])
item key
e 9 key torch.Size([768, 768])
item key
e 10 key torch.Size([768, 768])
item key
e 11 key torch.Size([768, 768])
item key
>>> processing on task: 0
----------------def modify_available_list----------------
>>> before modify: {}
>>> : task0
>>> after modify: {0: 0}
----------------def modify_available_list----------------
Loading checkpoint from: ./ckpt_for_hidep/cub/cub_b_0_inc_20/cub_hideprompt_5e/test_88110/checkpoint/task1_checkpoint.pth
>>> : task0, no need to re-init params
>>> : need to build memory
get_prefix_matrix use: 39.18026828765869
layer 0 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
layer 1 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
layer 2 item key r 2
----------------------------------------
Gradient Constraints Summary (768, 2)
----------------------------------------
layer 3 item key r 3
----------------------------------------
Gradient Constraints Summary (768, 3)
----------------------------------------
layer 4 item key r 2
----------------------------------------
Gradient Constraints Summary (768, 2)
----------------------------------------
e 0 key torch.Size([768, 768])
item key
e 1 key torch.Size([768, 768])
item key
e 2 key torch.Size([768, 768])
item key
e 3 key torch.Size([768, 768])
item key
e 4 key torch.Size([768, 768])
item key
* Acc@task 100.000 Acc@1 94.369 Acc@5 100.000 loss 0.247
[Average accuracy till task1]	Acc@task: 100.0000	Acc@1: 94.3689	Acc@5: 100.0000	Loss: 0.2471
NumPy array :stat_matrix saved to ./typical_setting_reproduced_cub_no_large_lr/cub_B_0_INC_20/hideprompt/pgc_10/cub_hideprompt_5e/test_55385/array_log.txt
>>> processing on task: 1
args.config:  cub_hideprompt_5e
>>> angle list pre: {0: 89.13384858862035}
>>> angle list all: {0: 87.55227248954155}
>>> angle_epsilon:  89.13384858862035
>>> all angle list:=================================================================
>>> done!===========================================================================
>>> max_key: 0 >>> max_value 87.55227248954155
>>> min_key: 0 >>> min_value 87.55227248954155
>>> done!===========================================================================
>>> top_k_keys:  [0]
----------------def modify_available_list----------------
>>> before modify: {0: 0}
>>> : task1
>>> after modify: {0: 0, 1: 1}
----------------def modify_available_list----------------
Loading checkpoint from: ./ckpt_for_hidep/cub/cub_b_0_inc_20/cub_hideprompt_5e/test_88110/checkpoint/task2_checkpoint.pth
>>> : task1, no need to re-init params
torch.Size([5, 2, 20, 12, 64])
torch.Size([5, 2, 1, 20, 12, 64])
>>> : need to build memory
get_prefix_matrix use: 38.374799966812134
layer 0 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
layer 1 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
layer 2 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
layer 3 item key r 3
----------------------------------------
Gradient Constraints Summary (768, 3)
----------------------------------------
layer 4 item key r 2
----------------------------------------
Gradient Constraints Summary (768, 2)
----------------------------------------
e 0 key torch.Size([768, 768])
item key
e 1 key torch.Size([768, 768])
item key
e 2 key torch.Size([768, 768])
item key
e 3 key torch.Size([768, 768])
item key
e 4 key torch.Size([768, 768])
item key
* Acc@task 93.592 Acc@1 91.650 Acc@5 99.223 loss 0.308
* Acc@task 97.913 Acc@1 85.565 Acc@5 99.478 loss 0.483
[Average accuracy till task2]	Acc@task: 95.7526	Acc@1: 88.6079	Acc@5: 99.3508	Loss: 0.3954	Forgetting: 2.7184	Backward: -2.7184
NumPy array :stat_matrix saved to ./typical_setting_reproduced_cub_no_large_lr/cub_B_0_INC_20/hideprompt/pgc_10/cub_hideprompt_5e/test_55385/array_log.txt
>>> processing on task: 2
args.config:  cub_hideprompt_5e
>>> angle list pre: {0: 89.11700830106827, 1: 89.15083480959998}
>>> angle list all: {0: 87.59033715257013, 1: 87.8698942234098}
>>> angle_epsilon:  89.15083480959998
>>> all angle list:=================================================================
>>> done!===========================================================================
>>> max_key: 1 >>> max_value 87.8698942234098
>>> min_key: 0 >>> min_value 87.59033715257013
>>> done!===========================================================================
>>> top_k_keys:  [0, 1]
----------------def modify_available_list----------------
>>> before modify: {0: 0, 1: 1}
>>> : task2
>>> after modify: {0: 0, 1: 1, 2: 2}
----------------def modify_available_list----------------
Loading checkpoint from: ./ckpt_for_hidep/cub/cub_b_0_inc_20/cub_hideprompt_5e/test_88110/checkpoint/task3_checkpoint.pth
>>> : task2, no need to re-init params
torch.Size([5, 2, 20, 12, 64])
torch.Size([5, 2, 1, 20, 12, 64])
>>> : need to build memory
get_prefix_matrix use: 32.48772668838501
layer 0 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
layer 1 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
layer 2 item key r 2
----------------------------------------
Gradient Constraints Summary (768, 2)
----------------------------------------
layer 3 item key r 2
----------------------------------------
Gradient Constraints Summary (768, 2)
----------------------------------------
layer 4 item key r 2
----------------------------------------
Gradient Constraints Summary (768, 2)
----------------------------------------
e 0 key torch.Size([768, 768])
item key
e 1 key torch.Size([768, 768])
item key
e 2 key torch.Size([768, 768])
item key
e 3 key torch.Size([768, 768])
item key
e 4 key torch.Size([768, 768])
item key
* Acc@task 88.350 Acc@1 90.097 Acc@5 99.029 loss 0.373
* Acc@task 92.348 Acc@1 84.870 Acc@5 98.957 loss 0.521
* Acc@task 92.450 Acc@1 89.094 Acc@5 98.826 loss 0.391
[Average accuracy till task3]	Acc@task: 91.0490	Acc@1: 88.0202	Acc@5: 98.9371	Loss: 0.4281	Forgetting: 2.4837	Backward: -2.4837
NumPy array :stat_matrix saved to ./typical_setting_reproduced_cub_no_large_lr/cub_B_0_INC_20/hideprompt/pgc_10/cub_hideprompt_5e/test_55385/array_log.txt
>>> processing on task: 3
args.config:  cub_hideprompt_5e
>>> angle list pre: {0: 89.1188612535099, 1: 89.16775397852847, 2: 89.1938283953059}
>>> angle list all: {0: 87.58056298304417, 1: 87.84801776401319, 2: 87.91644043579365}
>>> angle_epsilon:  89.1938283953059
>>> all angle list:=================================================================
>>> done!===========================================================================
>>> max_key: 2 >>> max_value 87.91644043579365
>>> min_key: 0 >>> min_value 87.58056298304417
>>> done!===========================================================================
>>> top_k_keys:  [0, 1, 2]
----------------def modify_available_list----------------
>>> before modify: {0: 0, 1: 1, 2: 2}
>>> : task3
>>> after modify: {0: 0, 1: 1, 2: 2, 3: 3}
----------------def modify_available_list----------------
Loading checkpoint from: ./ckpt_for_hidep/cub/cub_b_0_inc_20/cub_hideprompt_5e/test_88110/checkpoint/task4_checkpoint.pth
>>> : task3, no need to re-init params
torch.Size([5, 2, 20, 12, 64])
torch.Size([5, 2, 1, 20, 12, 64])
>>> : need to build memory
get_prefix_matrix use: 32.91022849082947
layer 0 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
layer 1 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
layer 2 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
layer 3 item key r 2
----------------------------------------
Gradient Constraints Summary (768, 2)
----------------------------------------
layer 4 item key r 2
----------------------------------------
Gradient Constraints Summary (768, 2)
----------------------------------------
e 0 key torch.Size([768, 768])
item key
e 1 key torch.Size([768, 768])
item key
e 2 key torch.Size([768, 768])
item key
e 3 key torch.Size([768, 768])
item key
e 4 key torch.Size([768, 768])
item key
* Acc@task 88.932 Acc@1 90.291 Acc@5 98.835 loss 0.369
* Acc@task 89.391 Acc@1 83.478 Acc@5 98.783 loss 0.530
* Acc@task 85.906 Acc@1 83.893 Acc@5 98.490 loss 0.534
* Acc@task 91.809 Acc@1 84.300 Acc@5 98.635 loss 0.532
[Average accuracy till task4]	Acc@task: 89.0096	Acc@1: 85.4906	Acc@5: 98.6856	Loss: 0.4911	Forgetting: 3.7887	Backward: -3.7887
NumPy array :stat_matrix saved to ./typical_setting_reproduced_cub_no_large_lr/cub_B_0_INC_20/hideprompt/pgc_10/cub_hideprompt_5e/test_55385/array_log.txt
>>> processing on task: 4
args.config:  cub_hideprompt_5e
>>> angle list pre: {0: 89.1217543257761, 1: 89.16986242331322, 2: 89.2362746040399, 3: 89.16357516076499}
>>> angle list all: {0: 87.6344427283405, 1: 87.84781981118489, 2: 87.88131320248124, 3: 87.86206231694132}
>>> angle_epsilon:  89.16357516076499
>>> all angle list:=================================================================
>>> done!===========================================================================
>>> max_key: 2 >>> max_value 87.88131320248124
>>> min_key: 0 >>> min_value 87.6344427283405
>>> done!===========================================================================
>>> top_k_keys:  [0, 1, 2]
----------------def modify_available_list----------------
>>> before modify: {0: 0, 1: 1, 2: 2, 3: 3}
>>> : task4
>>> after modify: {0: 0, 1: 1, 2: 2, 3: 3, 4: 4}
----------------def modify_available_list----------------
Loading checkpoint from: ./ckpt_for_hidep/cub/cub_b_0_inc_20/cub_hideprompt_5e/test_88110/checkpoint/task5_checkpoint.pth
>>> : task4, no need to re-init params
torch.Size([5, 2, 20, 12, 64])
torch.Size([5, 2, 1, 20, 12, 64])
>>> : need to build memory
get_prefix_matrix use: 27.392365217208862
layer 0 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
layer 1 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
layer 2 item key r 2
----------------------------------------
Gradient Constraints Summary (768, 2)
----------------------------------------
layer 3 item key r 3
----------------------------------------
Gradient Constraints Summary (768, 3)
----------------------------------------
layer 4 item key r 2
----------------------------------------
Gradient Constraints Summary (768, 2)
----------------------------------------
e 0 key torch.Size([768, 768])
item key
e 1 key torch.Size([768, 768])
item key
e 2 key torch.Size([768, 768])
item key
e 3 key torch.Size([768, 768])
item key
e 4 key torch.Size([768, 768])
item key
* Acc@task 88.932 Acc@1 89.126 Acc@5 98.447 loss 0.382
* Acc@task 89.739 Acc@1 82.609 Acc@5 98.783 loss 0.557
* Acc@task 86.577 Acc@1 85.235 Acc@5 98.154 loss 0.550
* Acc@task 87.201 Acc@1 82.765 Acc@5 98.123 loss 0.596
* Acc@task 94.764 Acc@1 93.581 Acc@5 99.155 loss 0.251
[Average accuracy till task5]	Acc@task: 89.4426	Acc@1: 86.6631	Acc@5: 98.5324	Loss: 0.4671	Forgetting: 3.3985	Backward: -3.3985
NumPy array :stat_matrix saved to ./typical_setting_reproduced_cub_no_large_lr/cub_B_0_INC_20/hideprompt/pgc_10/cub_hideprompt_5e/test_55385/array_log.txt
>>> processing on task: 5
args.config:  cub_hideprompt_5e
>>> angle list pre: {0: 89.1890015595502, 1: 89.16752087577468, 2: 89.22390163986014, 3: 89.19008756513692, 4: 89.1826438140296}
>>> angle list all: {0: 87.62763861773851, 1: 87.88627939262733, 2: 87.88083854792956, 3: 87.91003235652285, 4: 87.52439592822074}
>>> angle_epsilon:  89.1826438140296
>>> all angle list:=================================================================
>>> done!===========================================================================
>>> max_key: 3 >>> max_value 87.91003235652285
>>> min_key: 4 >>> min_value 87.52439592822074
>>> done!===========================================================================
>>> top_k_keys:  [0, 1, 2]
----------------def modify_available_list----------------
>>> before modify: {0: 0, 1: 1, 2: 2, 3: 3, 4: 4}
>>> : task5
>>> after modify: {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5}
----------------def modify_available_list----------------
Loading checkpoint from: ./ckpt_for_hidep/cub/cub_b_0_inc_20/cub_hideprompt_5e/test_88110/checkpoint/task6_checkpoint.pth
>>> : task5, no need to re-init params
torch.Size([5, 2, 20, 12, 64])
torch.Size([5, 2, 1, 20, 12, 64])
>>> : need to build memory
get_prefix_matrix use: 25.922882080078125
layer 0 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
layer 1 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
layer 2 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
layer 3 item key r 3
----------------------------------------
Gradient Constraints Summary (768, 3)
----------------------------------------
layer 4 item key r 2
----------------------------------------
Gradient Constraints Summary (768, 2)
----------------------------------------
e 0 key torch.Size([768, 768])
item key
e 1 key torch.Size([768, 768])
item key
e 2 key torch.Size([768, 768])
item key
e 3 key torch.Size([768, 768])
item key
e 4 key torch.Size([768, 768])
item key
* Acc@task 89.515 Acc@1 89.126 Acc@5 98.058 loss 0.387
* Acc@task 82.087 Acc@1 76.522 Acc@5 98.261 loss 0.655
* Acc@task 84.732 Acc@1 84.396 Acc@5 97.819 loss 0.565
* Acc@task 88.055 Acc@1 82.765 Acc@5 98.294 loss 0.592
* Acc@task 90.372 Acc@1 92.399 Acc@5 98.649 loss 0.279
* Acc@task 91.343 Acc@1 87.809 Acc@5 98.057 loss 0.517
[Average accuracy till task6]	Acc@task: 87.6837	Acc@1: 85.5027	Acc@5: 98.1894	Loss: 0.4992	Forgetting: 4.3405	Backward: -4.3405
NumPy array :stat_matrix saved to ./typical_setting_reproduced_cub_no_large_lr/cub_B_0_INC_20/hideprompt/pgc_10/cub_hideprompt_5e/test_55385/array_log.txt
>>> processing on task: 6
args.config:  cub_hideprompt_5e
>>> angle list pre: {0: 89.1539794934266, 1: 89.16188381782881, 2: 89.22067095544276, 3: 89.13084731243431, 4: 89.13342023829644, 5: 89.28741170715871}
>>> angle list all: {0: 87.59433004406871, 1: 87.81890347139796, 2: 87.88257269471504, 3: 87.85697111375006, 4: 87.53376673817023, 5: 87.81106256878843}
>>> angle_epsilon:  89.28741170715871
>>> all angle list:=================================================================
>>> done!===========================================================================
>>> max_key: 2 >>> max_value 87.88257269471504
>>> min_key: 4 >>> min_value 87.53376673817023
>>> done!===========================================================================
>>> top_k_keys:  [0, 1, 2]
----------------def modify_available_list----------------
>>> before modify: {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5}
>>> : task6
>>> after modify: {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6}
----------------def modify_available_list----------------
Loading checkpoint from: ./ckpt_for_hidep/cub/cub_b_0_inc_20/cub_hideprompt_5e/test_88110/checkpoint/task7_checkpoint.pth
>>> : task6, no need to re-init params
torch.Size([5, 2, 20, 12, 64])
torch.Size([5, 2, 1, 20, 12, 64])
>>> : need to build memory
get_prefix_matrix use: 24.61651039123535
layer 0 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
layer 1 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
layer 2 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
layer 3 item key r 2
----------------------------------------
Gradient Constraints Summary (768, 2)
----------------------------------------
layer 4 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
e 0 key torch.Size([768, 768])
item key
e 1 key torch.Size([768, 768])
item key
e 2 key torch.Size([768, 768])
item key
e 3 key torch.Size([768, 768])
item key
e 4 key torch.Size([768, 768])
item key
* Acc@task 90.097 Acc@1 89.709 Acc@5 97.864 loss 0.398
* Acc@task 80.522 Acc@1 77.043 Acc@5 98.435 loss 0.671
* Acc@task 84.060 Acc@1 84.564 Acc@5 97.651 loss 0.567
* Acc@task 87.031 Acc@1 82.423 Acc@5 98.123 loss 0.612
* Acc@task 88.682 Acc@1 92.399 Acc@5 98.649 loss 0.285
* Acc@task 88.693 Acc@1 85.689 Acc@5 97.703 loss 0.564
* Acc@task 91.137 Acc@1 86.622 Acc@5 96.321 loss 0.637
[Average accuracy till task7]	Acc@task: 87.1746	Acc@1: 85.4927	Acc@5: 97.8208	Loss: 0.5334	Forgetting: 3.8153	Backward: -3.8153
NumPy array :stat_matrix saved to ./typical_setting_reproduced_cub_no_large_lr/cub_B_0_INC_20/hideprompt/pgc_10/cub_hideprompt_5e/test_55385/array_log.txt
>>> processing on task: 7
args.config:  cub_hideprompt_5e
>>> angle list pre: {0: 89.10374547445821, 1: 89.16868639179673, 2: 89.23444852183502, 3: 89.17917214370043, 4: 89.16866078784511, 5: 89.3574002076765, 6: 89.10594131119383}
>>> angle list all: {0: 87.57480475027684, 1: 87.92194038119409, 2: 87.86694320764732, 3: 87.97774060871554, 4: 87.5455893653205, 5: 87.79048873794447, 6: 88.1211193684785}
>>> angle_epsilon:  89.10594131119383
>>> all angle list:=================================================================
>>> done!===========================================================================
>>> max_key: 6 >>> max_value 88.1211193684785
>>> min_key: 4 >>> min_value 87.5455893653205
>>> done!===========================================================================
>>> top_k_keys:  [0, 1, 2]
----------------def modify_available_list----------------
>>> before modify: {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6}
>>> : task7
>>> after modify: {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7}
----------------def modify_available_list----------------
Loading checkpoint from: ./ckpt_for_hidep/cub/cub_b_0_inc_20/cub_hideprompt_5e/test_88110/checkpoint/task8_checkpoint.pth
>>> : task7, no need to re-init params
torch.Size([5, 2, 20, 12, 64])
torch.Size([5, 2, 1, 20, 12, 64])
>>> : need to build memory
get_prefix_matrix use: 23.945011138916016
layer 0 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
layer 1 item key r 0
----------------------------------------
Gradient Constraints Summary (768, 0)
----------------------------------------
layer 2 item key r 0
----------------------------------------
Gradient Constraints Summary (768, 0)
----------------------------------------
layer 3 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
layer 4 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
e 0 key torch.Size([768, 768])
item key
e 1 key torch.Size([768, 768])
item key
e 2 key torch.Size([768, 768])
item key
e 3 key torch.Size([768, 768])
item key
e 4 key torch.Size([768, 768])
item key
* Acc@task 90.485 Acc@1 88.738 Acc@5 97.476 loss 0.422
* Acc@task 81.043 Acc@1 76.696 Acc@5 98.261 loss 0.675
* Acc@task 86.409 Acc@1 85.738 Acc@5 97.315 loss 0.563
* Acc@task 86.689 Acc@1 83.106 Acc@5 98.123 loss 0.620
* Acc@task 89.527 Acc@1 92.736 Acc@5 98.649 loss 0.292
* Acc@task 87.279 Acc@1 86.396 Acc@5 97.173 loss 0.569
* Acc@task 90.803 Acc@1 86.455 Acc@5 96.990 loss 0.608
* Acc@task 95.051 Acc@1 82.253 Acc@5 97.611 loss 0.650
[Average accuracy till task8]	Acc@task: 88.4110	Acc@1: 85.2647	Acc@5: 97.6997	Loss: 0.5499	Forgetting: 3.0680	Backward: -3.0680
NumPy array :stat_matrix saved to ./typical_setting_reproduced_cub_no_large_lr/cub_B_0_INC_20/hideprompt/pgc_10/cub_hideprompt_5e/test_55385/array_log.txt
>>> processing on task: 8
args.config:  cub_hideprompt_5e
>>> angle list pre: {0: 89.19726340993094, 1: 89.23774894127796, 2: 89.29950529816402, 3: 89.28794137854831, 4: 89.17993607007838, 5: 89.32377208642929, 6: 89.11825783153978, 7: 89.329745752133}
>>> angle list all: {0: 87.59887464564322, 1: 87.84913492474257, 2: 87.95078197623667, 3: 87.89853206232527, 4: 87.42187934072855, 5: 87.84115988402047, 6: 88.19536005316569, 7: 89.08234050624192}
>>> angle_epsilon:  89.329745752133
>>> all angle list:=================================================================
>>> done!===========================================================================
>>> max_key: 7 >>> max_value 89.08234050624192
>>> min_key: 4 >>> min_value 87.42187934072855
>>> done!===========================================================================
>>> top_k_keys:  [0, 1, 2]
----------------def modify_available_list----------------
>>> before modify: {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7}
>>> : task8
>>> after modify: {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8}
----------------def modify_available_list----------------
Loading checkpoint from: ./ckpt_for_hidep/cub/cub_b_0_inc_20/cub_hideprompt_5e/test_88110/checkpoint/task9_checkpoint.pth
>>> : task8, no need to re-init params
torch.Size([5, 2, 20, 12, 64])
torch.Size([5, 2, 1, 20, 12, 64])
>>> : need to build memory
get_prefix_matrix use: 28.842700481414795
layer 0 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
layer 1 item key r 3
----------------------------------------
Gradient Constraints Summary (768, 3)
----------------------------------------
layer 2 item key r 3
----------------------------------------
Gradient Constraints Summary (768, 3)
----------------------------------------
layer 3 item key r 5
----------------------------------------
Gradient Constraints Summary (768, 5)
----------------------------------------
layer 4 item key r 3
----------------------------------------
Gradient Constraints Summary (768, 3)
----------------------------------------
e 0 key torch.Size([768, 768])
item key
e 1 key torch.Size([768, 768])
item key
e 2 key torch.Size([768, 768])
item key
e 3 key torch.Size([768, 768])
item key
e 4 key torch.Size([768, 768])
item key
* Acc@task 88.738 Acc@1 88.544 Acc@5 97.282 loss 0.423
* Acc@task 80.174 Acc@1 75.826 Acc@5 98.435 loss 0.695
* Acc@task 84.899 Acc@1 84.732 Acc@5 97.315 loss 0.589
* Acc@task 87.884 Acc@1 83.447 Acc@5 97.952 loss 0.610
* Acc@task 90.372 Acc@1 92.905 Acc@5 98.480 loss 0.296
* Acc@task 86.219 Acc@1 85.336 Acc@5 96.996 loss 0.588
* Acc@task 89.465 Acc@1 85.619 Acc@5 96.990 loss 0.608
* Acc@task 91.468 Acc@1 83.106 Acc@5 97.270 loss 0.668
* Acc@task 90.372 Acc@1 86.149 Acc@5 94.088 loss 0.729
[Average accuracy till task9]	Acc@task: 87.7322	Acc@1: 85.0736	Acc@5: 97.2008	Loss: 0.5784	Forgetting: 3.1166	Backward: -3.0099
NumPy array :stat_matrix saved to ./typical_setting_reproduced_cub_no_large_lr/cub_B_0_INC_20/hideprompt/pgc_10/cub_hideprompt_5e/test_55385/array_log.txt
>>> processing on task: 9
args.config:  cub_hideprompt_5e
>>> angle list pre: {0: 89.09197798769986, 1: 89.15469228252137, 2: 89.21315710328786, 3: 89.16228858397133, 4: 89.09865264777423, 5: 89.26005748579456, 6: 89.03825797612235, 7: 89.2877865733309, 8: 89.23057343177206}
>>> angle list all: {0: 87.60259431207504, 1: 87.81067824247239, 2: 87.90046243704583, 3: 87.87023527591614, 4: 87.52485303965182, 5: 87.79594208143328, 6: 88.14296973926346, 7: 89.13682599196636, 8: 86.78566124342244}
>>> angle_epsilon:  89.23057343177206
>>> all angle list:=================================================================
>>> done!===========================================================================
>>> max_key: 7 >>> max_value 89.13682599196636
>>> min_key: 8 >>> min_value 86.78566124342244
>>> done!===========================================================================
>>> top_k_keys:  [0, 1, 2]
----------------def modify_available_list----------------
>>> before modify: {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8}
>>> : task9
>>> after modify: {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9}
----------------def modify_available_list----------------
Loading checkpoint from: ./ckpt_for_hidep/cub/cub_b_0_inc_20/cub_hideprompt_5e/test_88110/checkpoint/task10_checkpoint.pth
>>> : task9, no need to re-init params
torch.Size([5, 2, 20, 12, 64])
torch.Size([5, 2, 1, 20, 12, 64])
>>> : need to build memory
get_prefix_matrix use: 24.396595001220703
layer 0 item key r 1
----------------------------------------
Gradient Constraints Summary (768, 1)
----------------------------------------
layer 1 item key r 2
----------------------------------------
Gradient Constraints Summary (768, 2)
----------------------------------------
layer 2 item key r 2
----------------------------------------
Gradient Constraints Summary (768, 2)
----------------------------------------
layer 3 item key r 3
----------------------------------------
Gradient Constraints Summary (768, 3)
----------------------------------------
layer 4 item key r 2
----------------------------------------
Gradient Constraints Summary (768, 2)
----------------------------------------
e 0 key torch.Size([768, 768])
item key
e 1 key torch.Size([768, 768])
item key
e 2 key torch.Size([768, 768])
item key
e 3 key torch.Size([768, 768])
item key
e 4 key torch.Size([768, 768])
item key
* Acc@task 89.320 Acc@1 88.544 Acc@5 97.282 loss 0.422
* Acc@task 80.870 Acc@1 76.522 Acc@5 98.261 loss 0.689
* Acc@task 83.893 Acc@1 84.564 Acc@5 96.980 loss 0.606
* Acc@task 87.201 Acc@1 83.276 Acc@5 98.123 loss 0.609
* Acc@task 89.696 Acc@1 92.905 Acc@5 98.480 loss 0.298
* Acc@task 87.809 Acc@1 86.572 Acc@5 96.643 loss 0.567
* Acc@task 89.799 Acc@1 86.288 Acc@5 96.823 loss 0.602
* Acc@task 90.444 Acc@1 82.594 Acc@5 97.270 loss 0.663
* Acc@task 88.682 Acc@1 84.628 Acc@5 93.750 loss 0.769
* Acc@task 98.129 Acc@1 93.537 Acc@5 98.299 loss 0.353
[Average accuracy till task10]	Acc@task: 88.5844	Acc@1: 85.9431	Acc@5: 97.1910	Loss: 0.5579	Forgetting: 2.7447	Backward: -2.6499
NumPy array :stat_matrix saved to ./typical_setting_reproduced_cub_no_large_lr/cub_B_0_INC_20/hideprompt/pgc_10/cub_hideprompt_5e/test_55385/array_log.txt
Total training time: 0:44:12
